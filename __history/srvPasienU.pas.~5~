unit srvPasienU;

interface
   uses Dialogs, Classes, srvCommonsU, System.SysUtils, System.StrUtils;
type

  srvPasien = class(srvCommon)
    private
    function ambilJsonPost(idxstr : string) : string;
    public
    aScript : TStringList;
    function postPasien(idxstr : string): Boolean;
    constructor Create;
    destructor destroy;
    procedure masukkanpostPasien;
//    property Uri : string;
  end;


implementation
     uses SynCommons, mORMot, synautil;
{ srvPasien }

function srvPasien.ambilJsonPost(idxstr: string): string;
var sql0, sql1, tglStr : string;
    V1 : Variant;
begin
ShowMessage('awal ambil');
parameter_bridging('pasien', 'post');

V1 := _Json(FormatJson);

Result := '';
sql0 := 'select * from capil.capil_nik where idxstr = %s limit 1';
sql1 := Format(sql0, [QuotedStr(idxstr)]);
fdQuery.Close;
fdQuery.SQL.Clear;
fdQuery.SQL.Add(sql1);
fdQuery.Active := true;

if not fdQuery.IsEmpty then
begin

   DateTimeToString(tglStr, 'yyyy-MM-dd', fdQuery.FieldByName('tgl_lahir').AsDateTime);

//ShowMessage(VariantSaveJSON(V1));
  V1.nik := fdQuery.FieldByName('nik').AsString;
  V1.namaLengkap := fdQuery.FieldByName('nama_lengkap').AsString;
  V1.namaProp := fdQuery.FieldByName('nama_prop').AsString;
  V1.namaKab := fdQuery.FieldByName('nama_kab').AsString;
  V1.namaKec := fdQuery.FieldByName('nama_kec').AsString;
  V1.namaKel := fdQuery.FieldByName('nama_kel').AsString;
  V1.tmptLahir := fdQuery.FieldByName('tmpt_lahir').AsString;
  V1.tglLahir := tglStr;
  V1.jenisKelamin := fdQuery.FieldByName('jenis_kelamin').AsString;
  V1.golDrh := fdQuery.FieldByName('gol_drh').AsString;
  V1.alamat := fdQuery.FieldByName('alamat').AsString;
  V1.rt := fdQuery.FieldByName('rt').AsString;
  V1.rw := fdQuery.FieldByName('rw').AsString;
  V1.agama := fdQuery.FieldByName('agama').AsString;
  V1.pekerjaan := fdQuery.FieldByName('pekerjaan').AsString;
  V1.namaIbu := fdQuery.FieldByName('nama_ibu').AsString;
  V1.namaAyah := fdQuery.FieldByName('nama_ayah').AsString;
  V1.hubunganKeluarga := fdQuery.FieldByName('hubungan_keluarga').AsInteger;
  V1.pendidikan := fdQuery.FieldByName('pendidikan').AsString;
  V1.nomorKk := fdQuery.FieldByName('nomor_kk').AsString;
  V1.statusKawin := fdQuery.FieldByName('status_kawin').AsString;
  V1.noAktaLahir := fdQuery.FieldByName('no_akta_lahir').AsString;
  V1.namaKepalaKeluarga := fdQuery.FieldByName('nama_kepala_keluarga').AsString;
  V1.autoMr := fdQuery.FieldByName('auto_mr').AsString;
  V1.mr := fdQuery.FieldByName('mr').AsString;
  V1.idx := fdQuery.FieldByName('idx').AsInteger;
  V1.kelompok := fdQuery.FieldByName('kelompok').AsString;
  V1.biaya := fdQuery.FieldByName('biaya').AsString;
  V1.kartuBpjs := fdQuery.FieldByName('kartu_bpjs').AsString;
  V1.lama := fdQuery.FieldByName('lama').AsInteger;
  V1.hp := fdQuery.FieldByName('hp').AsString;
  V1.adlLuar := fdQuery.FieldByName('adl_luar').AsInteger;
  V1.puskesmas := fdQuery.FieldByName('puskesmas').AsInteger;
  V1.kdProvider := fdQuery.FieldByName('kd_provider').AsString;
  V1.noProp := fdQuery.FieldByName('no_prop').AsInteger;
  V1.noKab := fdQuery.FieldByName('no_kab').AsInteger;
  V1.noKec := fdQuery.FieldByName('no_kec').AsInteger;
  V1.noKel := fdQuery.FieldByName('no_kel').AsInteger;
  V1.id := fdQuery.FieldByName('id').AsInteger;
  V1.idxstr := fdQuery.FieldByName('idxstr').AsString;

  fdQuery.Close;
   Result := VariantSaveJSON(V1);
   ShowMessage(Result);
end else fdQuery.Close;
FDConn.Close;
end;

constructor srvPasien.Create;
begin
  inherited Create;
  aScript := TStringList.Create;
end;

destructor srvPasien.destroy;
begin
aScript.Free;
inherited;
end;

function srvPasien.postPasien(idxstr : string): Boolean;
var
    mStream : TMemoryStream;
    js : string;

begin
ShowMessage('awal post pasien');
Result := False;

js := ambilJsonPost(idxstr);
ShowMessage(js);
if Length(js) > 10 then
begin
mStream := TMemoryStream.Create;
WriteStrToStream(mStream, js);

//Uri := ReplaceStr(Uri, '{puskesmas}', puskesmas);
Result:= httpPost(Uri, mStream);
mStream.Free;
  if Result then jika_berhasil('capil.capil_nik', idxstr) else
         jika_gagal('post', Uri, js, 'capil.capil_nik', idxstr);

end;
FDConn.Close;
end;



procedure srvPasien.masukkanpostPasien;
var dataResp, dataList : Variant;
    i : Integer;
    tSl : TStringList;
    sqlx0, sqlx1 : string;
    sqlDel0, sql0, sql1 : string;
    dId, dPuskesmas, dJml, dTgl : string;
    poliSakit : Boolean;
begin
//       ShowMessage('awal masukkan get');

   sqlDel0 := 'delete from simpus.tt where id = 0;';
//   sql0 := 'insert into simpus.tt(id, puskesmas, jml, tanggal_ubah) values(%s, %s, %s, %s);';
   tsL := TStringList.Create;
   tSl.Add(sqlDel0);
   try
   dataResp := _jsonFast(tsResponse.Text);
   sql1 := jsonToSql('simpus.tt', dataResp);
   sql1 := ReplaceStr(sql1, 'tanggalUbah', 'tanggal_ubah');
   tSl.Add(sql1);
// ShowMessage(tsResponse.Text);

 {
   for I := 0 to dataResp._count - 1 do
     begin
       dBiaya := dataResp.Value(i).biaya;
       dIdRpt := dataResp.Value(i).idRpt;
//       ShowMessage('BooltoStr (nonSpesialis, True)');

       sql1 := Format(sql0, [QuotedStr(dBiaya), QuotedStr(dIdRpt)]);
       tSl.Add(sql1);
//       showMessage(sqlDel1);
//       showMessage(sql1);
     end;
  }
   finally
     aScript.Assign(tSl);
     jalankanScript(tSl);
     FreeAndNil(tSl);
   end;
end;

end.
